// <auto-generated />
using System;
using Contracts.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Contracts.Data.Pg.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Contracts.Data.Data.Entities.Campeonato", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("idf_campeonato");

                    b.Property<int>("AnoFundacao")
                        .HasColumnType("integer")
                        .HasColumnName("test_ano");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("teStNoMe");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("test_pais");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("sts");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updatE_at");

                    b.HasKey("Id")
                        .HasName("pk_test_campeonato");

                    b.HasIndex("Id")
                        .HasDatabaseName("ix_test_campeonato_idf_campeonato");

                    b.ToTable("test_Campeonato", "test");
                });

            modelBuilder.Entity("Contracts.Data.Data.Entities.Clube", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Abreviacao")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("abreviacao");

                    b.Property<string>("Apelido")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("apelido");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nome");

                    b.HasKey("Id")
                        .HasName("pk_clube");

                    b.HasIndex("Nome")
                        .IsUnique()
                        .HasDatabaseName("ix_clube_nome");

                    b.ToTable("clube", (string)null);
                });

            modelBuilder.Entity("Contracts.Data.Data.Entities.Contrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<string>("Descricao")
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<DateTime>("Fim")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fim");

                    b.Property<int>("IdClube")
                        .HasColumnType("integer")
                        .HasColumnName("id_clube");

                    b.Property<int>("IdFornecedor")
                        .HasColumnType("integer")
                        .HasColumnName("id_fornecedor");

                    b.Property<int>("IdMaterial")
                        .HasColumnType("integer")
                        .HasColumnName("id_material");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("inicio");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("numero");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric")
                        .HasColumnName("preco");

                    b.HasKey("Id")
                        .HasName("pk_contrato");

                    b.HasIndex("IdClube")
                        .HasDatabaseName("ix_contrato_id_clube");

                    b.HasIndex("IdFornecedor")
                        .HasDatabaseName("ix_contrato_id_fornecedor");

                    b.HasIndex("IdMaterial")
                        .HasDatabaseName("ix_contrato_id_material");

                    b.HasIndex("Numero")
                        .IsUnique()
                        .HasDatabaseName("ix_contrato_numero");

                    b.ToTable("contrato", (string)null);
                });

            modelBuilder.Entity("Contracts.Data.Data.Entities.Fabrica", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("apelido");

                    b.Property<int>("BulkMergeStatus")
                        .HasColumnType("integer")
                        .HasColumnName("bulk_merge_status");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<int>("QuantidadeFuncionarios")
                        .HasColumnType("integer")
                        .HasColumnName("quantidade_funcionarios");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_at");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("text")
                        .HasColumnName("update_by");

                    b.HasKey("Id")
                        .HasName("pk_fabrica");

                    b.HasIndex("Id")
                        .HasDatabaseName("ix_fabrica_id");

                    b.ToTable("Fabrica", "test");
                });

            modelBuilder.Entity("Contracts.Data.Data.Entities.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("cep");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("documento");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_fornecedor");

                    b.HasIndex("Documento")
                        .IsUnique()
                        .HasDatabaseName("ix_fornecedor_documento");

                    b.ToTable("fornecedor", (string)null);
                });

            modelBuilder.Entity("Contracts.Data.Data.Entities.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("nome");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("numero");

                    b.HasKey("Id")
                        .HasName("pk_material");

                    b.HasIndex("Numero")
                        .IsUnique()
                        .HasDatabaseName("ix_material_numero");

                    b.ToTable("material", (string)null);
                });

            modelBuilder.Entity("Contracts.Data.Data.Entities.Contrato", b =>
                {
                    b.HasOne("Contracts.Data.Data.Entities.Clube", "Clube")
                        .WithMany()
                        .HasForeignKey("IdClube")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_contrato_clube_id_clube");

                    b.HasOne("Contracts.Data.Data.Entities.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("IdFornecedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_contrato_fornecedor_id_fornecedor");

                    b.HasOne("Contracts.Data.Data.Entities.Material", "Material")
                        .WithMany()
                        .HasForeignKey("IdMaterial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_contrato_material_id_material");

                    b.Navigation("Clube");

                    b.Navigation("Fornecedor");

                    b.Navigation("Material");
                });
#pragma warning restore 612, 618
        }
    }
}
